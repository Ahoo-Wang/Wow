management:
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include:
          - health
          - wow
          - wowBI
          - cosid
          - cosidGenerator
          - cosidStringGenerator
springdoc:
  show-actuator: true
logging:
  level:
    me.ahoo.wow: debug
spring:
  application:
    name: compensation-service
  web:
    resources:
      static-locations: file:./compensation/wow-compensation-dashboard/dist/browser/
  jackson:
    serialization:
      write-durations-as-timestamps: true
      write-dates-as-timestamps: true
    mapper:
      accept-case-insensitive-enums: true
  autoconfigure:
    exclude:
#      - org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration
      - org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientAutoConfiguration
      - org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration
      - org.springframework.boot.autoconfigure.elasticsearch.ReactiveElasticsearchClientAutoConfiguration
  data:
    mongodb:
      uri: mongodb://root:root@mongodb-dev-mongodb-sharded.dev.svc.cluster.local:27017/compensation_db?authSource=admin&maxIdleTimeMS=60000
      database: compensation_db
  elasticsearch:
    username: elastic
    password: elastic
    uris: dev-es-default.dev.svc.cluster.local:9200
cosid:
  machine:
    enabled: true
    distributor:
      type: redis
  generator:
    enabled: true
wow:
  kafka:
    bootstrap-servers: 'kafka-dev-0.kafka-dev-headless.dev.svc.cluster.local:9093'
#  eventsourcing:
#    snapshot:
#      storage: elasticsearch


