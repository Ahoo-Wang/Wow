name: Codecov
on:
  push:
    paths-ignore:
      - 'document/**'
      - 'wow-example/**'
  pull_request:
    paths-ignore:
      - 'document/**'
      - 'wow-example/**'
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write
env:
  CI: GITHUB_ACTIONS
jobs:
  codecov:
    name: Codecov
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop

      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '8.0'
          mysql root password: 'root'

      - name: Checkout
        uses: actions/checkout@master

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Init Wow-Db
        run: mysql -vvv -h localhost -uroot -proot < wow-r2dbc/src/init-schema/init-schema-mysql.sql

      - name: Build Code Coverage Report
        run: gradle codeCoverageReport --stacktrace

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.7.0
        if: always()
        with:
          ignore_runs: true
          large_files: true
          files: |
            wow-core/build/test-results/**/*.xml
            wow-compiler/build/test-results/**/*.xml
            wow-kafka/build/test-results/**/*.xml
            wow-mongo/build/test-results/**/*.xml
            test/wow-mock/build/test-results/**/*.xml
            wow-r2dbc/build/test-results/**/*.xml
            wow-redis/build/test-results/**/*.xml
            wow-elasticsearch/build/test-results/**/*.xml
            wow-spring/build/test-results/**/*.xml
            wow-webflux/build/test-results/**/*.xml
            wow-spring-boot-starter/build/test-results/**/*.xml
            wow-opentelemetry/build/test-results/**/*.xml
            example/example-domain/build/test-results/**/*.xml

      - name: Upload Code Coverage Report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
#          directory: ./build/reports/jacoco/codeCoverageReport/
          files: ./test/code-coverage-report/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml
          path_to_write_report: ./coverage/codecov_report.txt
