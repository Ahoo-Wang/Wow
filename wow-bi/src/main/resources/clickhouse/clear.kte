@import me.ahoo.wow.api.modeling.NamedAggregate
@import me.ahoo.wow.bi.expansion.TableNaming.toDistributedTableName

@param namedAggregate: NamedAggregate
@param expansionTables: List<String>

!{val commandDistributedTableName = namedAggregate.toDistributedTableName("command")}
!{val commandLocalTableName = "${commandDistributedTableName}_local"}
!{val commandQueueTableName = "${commandDistributedTableName}_queue"}
!{val commandConsumerTableName = "${commandDistributedTableName}_consumer"}
!{val stateDistributedTableName = namedAggregate.toDistributedTableName("state")}
!{val stateLocalTableName = "${stateDistributedTableName}_local"}
!{val stateQueueTableName = "${stateDistributedTableName}_queue"}
!{val stateConsumerTableName = "${stateDistributedTableName}_consumer"}
!{val stateLastDistributedTableName = namedAggregate.toDistributedTableName("state_last")}
!{val stateLastLocalTableName = "${stateLastDistributedTableName}_local"}
!{val stateLastConsumerTableName = "${stateLastDistributedTableName}_consumer"}
------------------command------------------
DROP TABLE IF EXISTS bi_db.${commandDistributedTableName} ON CLUSTER '{cluster}';
DROP TABLE IF EXISTS bi_db.${commandLocalTableName} ON CLUSTER '{cluster}';
DROP TABLE IF EXISTS bi_db_consumer.${commandQueueTableName} ON CLUSTER '{cluster}';
DROP TABLE IF EXISTS bi_db_consumer.${commandConsumerTableName} ON CLUSTER '{cluster}';
------------------command------------------
------------------state------------------
DROP TABLE IF EXISTS bi_db.${stateDistributedTableName} ON CLUSTER '{cluster}';
DROP TABLE IF EXISTS bi_db.${stateLocalTableName} ON CLUSTER '{cluster}';
DROP TABLE IF EXISTS bi_db_consumer.${stateQueueTableName} ON CLUSTER '{cluster}';
DROP TABLE IF EXISTS bi_db_consumer.${stateConsumerTableName} ON CLUSTER '{cluster}';
------------------state------------------
------------------stateLast------------------
DROP TABLE IF EXISTS bi_db.${stateLastDistributedTableName} ON CLUSTER '{cluster}';
DROP TABLE IF EXISTS bi_db.${stateLastLocalTableName} ON CLUSTER '{cluster}';
DROP TABLE IF EXISTS bi_db_consumer.${stateLastConsumerTableName} ON CLUSTER '{cluster}';
------------------stateLast------------------
------------------expansion------------------
@for(table in expansionTables)
DROP TABLE IF EXISTS bi_db.${table} ON CLUSTER '{cluster}';
@endfor
------------------expansion------------------