[versions]
# libraries
spring-boot = "3.4.5"
cosid = "2.12.5"
simba = "2.8.6"
coapi = "1.11.0"
cocache = "3.8.0"
testcontainers = "1.21.0"
opentelemetry = "1.50.0"
opentelemetry-instrumentation = "2.15.0"
opentelemetry-semconv = "1.29.0-alpha"
guava = "33.4.8-jre"
kotlin-logging = "7.0.7"
swagger = "2.2.30"
springdoc = "2.8.8"
jte = "3.2.1"
jsonschema-generator = "4.38.0"
json-schema-validator = "1.5.6"
# testing
fluent-assert = "0.1.0"
hamcrest = "3.0"
mockk = "1.14.2"
kotlin-compile-testing = "0.7.1"
# plugins
test-retry = "1.6.2"
detekt = "1.23.8"
dokka = "2.0.0"
kotlin = "2.1.20"
ksp = "2.1.20-2.0.1"
publish-plugin = "2.0.0"

[libraries]
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
cosid-bom = { module = "me.ahoo.cosid:cosid-bom", version.ref = "cosid" }
simba-bom = { module = "me.ahoo.simba:simba-bom", version.ref = "simba" }
coapi-bom = { module = "me.ahoo.coapi:coapi-bom", version.ref = "coapi" }
cocache-bom = { module = "me.ahoo.cocache:cocache-bom", version.ref = "cocache" }
jsonschema-generator-bom = { module = "com.github.victools:jsonschema-generator-bom", version.ref = "jsonschema-generator" }
json-schema-validator = { module = "com.networknt:json-schema-validator", version.ref = "json-schema-validator" }
opentelemetry-bom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry" }
opentelemetry-instrumentation-bom = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom", version.ref = "opentelemetry-instrumentation" }
opentelemetry-semconv = { module = "io.opentelemetry:opentelemetry-semconv", version.ref = "opentelemetry-semconv" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
ksp-symbol-processing-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ksp-symbol-processing = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "ksp" }
kotlin-compile-testing = { module = "dev.zacsweers.kctfork:ksp", version.ref = "kotlin-compile-testing" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }
swagger = { module = "io.swagger.core.v3:swagger-core-jakarta", version.ref = "swagger" }
springdoc-bom = { module = "org.springdoc:springdoc-openapi-bom", version.ref = "springdoc" }
jte = { module = "gg.jte:jte", version.ref = "jte" }
jte-kotlin = { module = "gg.jte:jte-kotlin", version.ref = "jte" }
fluent-assert-bom = { module = "me.ahoo.test:fluent-assert-bom", version.ref = "fluent-assert" }
hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
[plugins]
test-retry = { id = "org.gradle.test-retry", version.ref = "test-retry" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
publish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "publish-plugin" }

