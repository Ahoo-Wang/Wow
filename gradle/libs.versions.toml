[versions]
# libraries
springBoot = "3.3.1"
cosid = "2.9.0"
simba = "2.2.6"
coapi="1.2.9"
testcontainers = "1.19.8"
opentelemetry = "1.39.0"
opentelemetryInstrumentation = "2.5.0"
opentelemetrySemconv = "1.29.0-alpha"
guava = "33.2.1-jre"
hamcrest = "2.2"
mockk = "1.13.11"
kotlinCompileTesting = "0.5.0"
swagger = "2.2.22"
springDoc = "2.5.0"
jte = "3.1.12"
# plugins
testRetry = "1.5.9"
detekt = "1.23.6"
dokka = "1.9.20"
kotlin = "2.0.0"
publishPlugin = "2.0.0"
ksp = "2.0.0-1.0.22"

[libraries]
springBootDependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springBoot" }
cosidBom = { module = "me.ahoo.cosid:cosid-bom", version.ref = "cosid" }
simbaBom = { module = "me.ahoo.simba:simba-bom", version.ref = "simba" }
coapiBom = { module = "me.ahoo.coapi:coapi-bom", version.ref = "coapi" }
opentelemetryBom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry" }
opentelemetryInstrumentationBom = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom", version.ref = "opentelemetryInstrumentation" }
opentelemetrySemconv = { module = "io.opentelemetry:opentelemetry-semconv", version.ref = "opentelemetrySemconv" }
testcontainersBom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
kspSymbolProcessingApi = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kspSymbolProcessing = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "ksp" }
kotlinCompileTesting = { module = "dev.zacsweers.kctfork:ksp", version.ref = "kotlinCompileTesting" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
swagger = { module = "io.swagger.core.v3:swagger-core-jakarta", version.ref = "swagger" }
springDocStarterCommon = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "springDoc" }
springDocStarterWebfluxApi = { module = "org.springdoc:springdoc-openapi-starter-webflux-api", version.ref = "springDoc" }
springDocStarterWebfluxUi = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "springDoc" }
jte = { module = "gg.jte:jte", version.ref = "jte" }
jte-kotlin = { module = "gg.jte:jte-kotlin", version.ref = "jte" }
hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
detektFormatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
[plugins]
testRetry = { id = "org.gradle.test-retry", version.ref = "testRetry" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinSpring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlinkapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
publishPlugin = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "publishPlugin" }

