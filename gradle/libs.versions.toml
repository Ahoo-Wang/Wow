[versions]
# libraries
springBoot = "3.2.0"
cosid = "2.5.6"
testcontainers = "1.19.3"
opentelemetry = "1.32.0"
opentelemetryInstrumentation = "1.32.0"
opentelemetrySemconv = "1.29.0-alpha"
guava = "32.1.3-jre"
hamcrest = "2.2"
mockk = "1.13.8"
r2dbcBom = "Borca-RELEASE"
kotlinCompileTesting = "0.4.0"
swagger = "2.2.19"
springDoc = "2.2.0"
# plugins
testRetry= "1.5.6"
detekt = "1.23.3"
dokka = "1.9.10"
kotlin = "1.9.21"
publishPlugin = "1.3.0"
ksp = "1.9.20-1.0.14"

[libraries]
springBootDependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springBoot" }
cosidBom = { module = "me.ahoo.cosid:cosid-bom", version.ref = "cosid" }
opentelemetryBom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry" }
opentelemetryInstrumentationBom = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom", version.ref = "opentelemetryInstrumentation" }
opentelemetrySemconv = { module = "io.opentelemetry:opentelemetry-semconv", version.ref = "opentelemetrySemconv" }
r2dbcBom = { module = "io.r2dbc:r2dbc-bom", version.ref = "r2dbcBom" }
testcontainersBom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
kspSymbolProcessingApi = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kspSymbolProcessing = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "ksp" }
kotlinCompileTesting = { module = "dev.zacsweers.kctfork:ksp", version.ref = "kotlinCompileTesting" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
swagger = { module = "io.swagger.core.v3:swagger-core-jakarta", version.ref = "swagger" }
springDocStarterCommon = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "springDoc" }
springDocStarterWebfluxApi = { module = "org.springdoc:springdoc-openapi-starter-webflux-api", version.ref = "springDoc" }
springDocStarterWebfluxUi = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "springDoc" }
hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
detektFormatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
[plugins]
testRetry = { id = "org.gradle.test-retry", version.ref = "testRetry" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinSpring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlinkapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
publishPlugin = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "publishPlugin" }

