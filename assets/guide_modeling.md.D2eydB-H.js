import{_ as e,D as h,c as k,I as n,w as t,a4 as l,j as s,a as i,o as p}from"./chunks/framework.CXozoTLq.js";const d="/wow/assets/aggregation-pattern.C2giArjJ.svg",r="/wow/assets/single-class-pattern.DF_fHEBW.svg",E="/wow/assets/inheritance-pattern.BuKlktF0.svg",x=JSON.parse('{"title":"聚合根建模","description":"","frontmatter":{},"headers":[],"relativePath":"guide/modeling.md","filePath":"guide/modeling.md","lastUpdated":1721086461000}'),o={name:"guide/modeling.md"},g=l('<h1 id="聚合根建模" tabindex="-1">聚合根建模 <a class="header-anchor" href="#聚合根建模" aria-label="Permalink to &quot;聚合根建模&quot;">​</a></h1><h2 id="风格" tabindex="-1">风格 <a class="header-anchor" href="#风格" aria-label="Permalink to &quot;风格&quot;">​</a></h2><h3 id="聚合模式-推荐" tabindex="-1">聚合模式 (推荐) <a class="header-anchor" href="#聚合模式-推荐" aria-label="Permalink to &quot;聚合模式 (推荐)&quot;">​</a></h3><p>聚合模式将命令函数、溯源函数(包含聚合状态数据)分别放置在不同的类中，这样做的好处是可以避免命令函数直接变更聚合状态数据的问题(将<code>setter</code>访问器设置为<code>private</code>)。 同时职责分离也使得聚合根的命令函数更加专注于命令处理，溯源函数更加专注于聚合状态数据的变更。</p>',4),c=s("p",null,[s("img",{src:d,alt:"Aggregation Class - Modeling"})],-1),y=s("h3",{id:"单一类模式",tabindex:"-1"},[i("单一类模式 "),s("a",{class:"header-anchor",href:"#单一类模式","aria-label":'Permalink to "单一类模式"'},"​")],-1),m=s("p",null,"单一类模式将命令函数、溯源函数以及聚合状态数据放置在一起，这样做的好处是简单直接。",-1),F=s("div",{class:"danger custom-block"},[s("p",{class:"custom-block-title"},"DANGER"),s("p",null,[i("但是因为所在同一个类中，所以命令函数是可以直接变更聚合状态数据的，这违反了"),s("code",null,"EventSourcing"),i("的原则。 要求开发人员时刻谨记，命令函数只能返回领域事件并交由溯源函数来变更聚合状态数据。")])],-1),u=s("p",null,[s("img",{src:r,alt:"Single Class - Modeling"})],-1),_=s("h3",{id:"继承模式",tabindex:"-1"},[i("继承模式 "),s("a",{class:"header-anchor",href:"#继承模式","aria-label":'Permalink to "继承模式"'},"​")],-1),C=s("p",null,[i("继承模式将状态聚合根作为基类，并且将"),s("code",null,"setter"),i("访问器设置为"),s("code",null,"private"),i("。以避免命令聚合根在命令函数中修改聚合状态数据。")],-1),A=s("p",null,[s("img",{src:E,alt:"Inheritance - Modeling"})],-1),D=l(`<h2 id="约定" tabindex="-1">约定 <a class="header-anchor" href="#约定" aria-label="Permalink to &quot;约定&quot;">​</a></h2><h3 id="命令聚合根" tabindex="-1">命令聚合根 <a class="header-anchor" href="#命令聚合根" aria-label="Permalink to &quot;命令聚合根&quot;">​</a></h3><p>命令聚合根负责接收命令处理函数，执行相应的业务逻辑，并返回领域事件。</p><ul><li>命令聚合根需要添加 <code>@AggregateRoot</code> 注解，以便 <code>wow-compiler</code> 模块可以生成相应的元数据定义。</li><li>命令处理函数的 <code>@OnCommand</code> 注解不是必须的，默认情况下将命令处理函数命名为 <code>onCommand</code> 即表明该函数为命令处理函数。</li><li>命令处理函数的第一个参数可以定义为：具体命令(<code>AddCartItem</code>)、命令消息(<code>CommandMessage&lt;AddCartItem&gt;</code>)、命令消息交换(<code>CommandExchange&lt;AddCartItem&gt;</code>)。</li><li>命令处理函数的其余参数将从 <em>IOC 容器</em>中获取。如果你在 <em>Spring IOC</em> 容器中注入了某个实例，可以通过参数直接获取。</li><li>命令处理函数的返回值为一个或者多个领域事件，该领域事件首先会由状态聚合根通过溯源函数将状态变更为最新状态，然后持久化到 <em>EventStore</em>。</li><li>持久化完成后，将会通过 <em>DomainEventBus</em> 发布到事件总线。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@AggregateRoot</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CartState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @OnCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(returns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [CartItemAdded::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, CartQuantityChanged::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(command: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddCartItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">): </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(state.items.size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MAX_CART_ITEM_SIZE) {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;购物车最多只能添加[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$MAX_CART_ITEM_SIZE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]个商品.&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        state.items.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">firstOrNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            it.productId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> command.productId</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }?.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CartQuantityChanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                changed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> it.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(quantity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> it.quantity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> command.quantity),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> added </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CartItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            productId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> command.productId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            quantity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> command.quantity,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CartItemAdded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            added </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> added,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="状态聚合根" tabindex="-1">状态聚合根 <a class="header-anchor" href="#状态聚合根" aria-label="Permalink to &quot;状态聚合根&quot;">​</a></h3><p>状态聚合根定义了聚合状态数据以及溯源函数。</p><ul><li>状态聚合根在构造函数中必须定义聚合根 ID 字段。</li><li>溯源函数的作用是将领域事件应用到聚合状态数据上，从而变更聚合状态数据。</li><li>溯源函数使用 <code>@OnSourcing</code> 注解进行标记。不过，该注解是可选的，默认情况下，当函数名为 <code>onSourcing</code> 时，即表明该函数为溯源函数。</li><li>溯源函数接受的参数为：具体领域事件 (<code>CartItemAdded</code>)、领域事件 (<code>DomainEvent&lt;CartItemAdded&gt;</code>)。</li><li>无需为溯源函数定义返回值。</li></ul><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CartState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CartItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> listOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> set</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @OnSourcing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onCartItemAdded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cartItemAdded: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CartItemAdded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cartItemAdded.added</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,9);function B(I,v,b,f,q,S){const a=h("center");return p(),k("div",null,[g,n(a,null,{default:t(()=>[c]),_:1}),y,m,F,n(a,null,{default:t(()=>[u]),_:1}),_,C,n(a,null,{default:t(()=>[A]),_:1}),D])}const P=e(o,[["render",B]]);export{x as __pageData,P as default};
