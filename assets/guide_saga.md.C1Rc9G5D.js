import{_ as l}from"./chunks/transfer-saga.D8LEPawC.js";import{_ as h,D as e,c as p,I as n,w as t,a4 as i,o as k,j as s}from"./chunks/framework.CXozoTLq.js";const r="/wow/assets/choreography.DlhEf22n.png",E="/wow/assets/orchestration.BEQNth-q.png",q=JSON.parse('{"title":"分布式事务 (Saga)","description":"","frontmatter":{},"headers":[],"relativePath":"guide/saga.md","filePath":"guide/saga.md","lastUpdated":1721086461000}'),d={name:"guide/saga.md"},g=i('<h1 id="分布式事务-saga" tabindex="-1">分布式事务 (Saga) <a class="header-anchor" href="#分布式事务-saga" aria-label="Permalink to &quot;分布式事务 (Saga)&quot;">​</a></h1><p><em>Wow</em> 框架提供了基于<em>流程编排(Orchestration)模式</em>的无状态的 <em>Saga</em> 实现，可以用于处理分布式事务。</p><p>在近三年的实际生产环境验证中，我们发现无状态的 <em>Saga</em> 已经足够满足实际复杂场景的需求。</p><h2 id="saga-模式" tabindex="-1">Saga 模式 <a class="header-anchor" href="#saga-模式" aria-label="Permalink to &quot;Saga 模式&quot;">​</a></h2><p>Saga 模式是一种分布式事务协调方法，通过一系列事务步骤来更新每个服务并发布消息或事件。如果某个步骤失败，Saga 将执行补偿事务来抵消之前的事务。</p><h3 id="流程编舞-choreography" tabindex="-1">流程编舞 (Choreography) <a class="header-anchor" href="#流程编舞-choreography" aria-label="Permalink to &quot;流程编舞 (Choreography)&quot;">​</a></h3>',6),o=s("p",null,[s("img",{src:r,alt:"Choreography"})],-1),y=i('<blockquote><p>图片引用自 <a href="https://learn.microsoft.com/en-us/previous-versions/msp-n-p/jj591569(v=pandp.10)" target="_blank" rel="noreferrer">A Saga on Sagas</a>。</p></blockquote><p>流程编舞模式参与方在没有集中控制点的情况下交换事件。 在这种方法中，每个本地事务都会发布领域事件，触发其他服务中的本地事务。</p><p><strong>优点：</strong></p><ul><li>适用于需要少量参与方并且不需要复杂协调逻辑的简单工作流。</li><li>不需要额外的服务实现和维护。</li><li>消除了单点故障的风险，因为责任分散在各个分布式事务参与方之间。</li></ul><p><strong>缺点：</strong></p><ul><li>添加新步骤时，工作流复杂性可能会增加，很难跟踪哪些分布式事务参与方响应特定命令。</li><li>存在分布式事务参与方之间的循环依赖的风险。</li><li>集成测试困难，因为必须运行所有服务以模拟事务。</li></ul><h3 id="流程编排-orchestration" tabindex="-1">流程编排 (Orchestration) <a class="header-anchor" href="#流程编排-orchestration" aria-label="Permalink to &quot;流程编排 (Orchestration)&quot;">​</a></h3>',7),c=s("p",null,[s("img",{src:E,alt:"Orchestration"})],-1),F=i('<blockquote><p>图片引用自 <a href="https://learn.microsoft.com/en-us/previous-versions/msp-n-p/jj591569(v=pandp.10)" target="_blank" rel="noreferrer">A Saga on Sagas</a>。</p></blockquote><p>流程编排模式相对于编舞需要增加集中的流程管理器告诉分布式事务参与方执行哪些本地事务。 Saga 流程管理器处理所有事务，并根据事件告诉参与方执行哪些操作。</p><p><strong>优点：</strong></p><ul><li>适用于涉及许多参与方或随时间添加新参与方的复杂工作流。</li><li>在对每个参与方的流程和活动流的控制方面具有更大的灵活性。</li><li>不引入循环依赖，因为流程管理器单方面依赖于Saga参与方。</li><li>关注点分离，因为参与方不需要知道其他参与方的领域事件与命令。</li></ul><p><strong>缺点：</strong></p><ul><li>需要单独维护流程管理器。</li></ul><p>Wow 框架使用流程编排模式实现 <em>Saga</em> 模式，</p><p>如果想要了解更多关于 <em>Saga</em> 模式的内容，可以参考 <a href="https://learn.microsoft.com/en-us/previous-versions/msp-n-p/jj591569(v=pandp.10)" target="_blank" rel="noreferrer">A Saga on Sagas</a>。</p><h2 id="约定" tabindex="-1">约定 <a class="header-anchor" href="#约定" aria-label="Permalink to &quot;约定&quot;">​</a></h2><p><em>Saga</em> 通过订阅事件完成处理逻辑后返回聚合命令。</p><ul><li>流程管理器（<em>Saga</em>）需要添加 <code>@StatelessSaga</code> 注解，以便框架能够自动发现。</li><li>领域事件处理函数需要添加 <code>@OnEvent</code> 注解，但该注解不是必须的，默认情况下命名为 <code>onEvent</code> 即表明该函数为事件接收函数。</li><li>领域事件处理函数接受的参数为：具体领域事件 (<code>Prepared</code>)、领域事件 (<code>DomainEvent&lt;Prepared&gt;</code>)。</li><li>领域事件处理函数的返回值为一个或者多个聚合命令，该聚合命令将会被发送到命令总线。当然也可以不返回任何命令。</li></ul><h2 id="银行转账案例中的转账流程管理器" tabindex="-1">银行转账案例中的转账流程管理器 <a class="header-anchor" href="#银行转账案例中的转账流程管理器" aria-label="Permalink to &quot;银行转账案例中的转账流程管理器&quot;">​</a></h2>',12),u=s("p",null,[s("img",{src:l,alt:"银行转账案例中的转账流程管理器"})],-1),_=i(`<p>转账流程管理器（<code>TransferSaga</code>）负责协调处理转账的事件，并生成相应的命令。</p><ul><li><code>onEvent(Prepared)</code>: 订阅转账已准备就绪事件（<code>Prepared</code>），并生成入账命令(<code>Entry</code>)。</li><li><code>onEvent(AmountEntered)</code>: 订阅转账已入账事件（<code>AmountEntered</code>），并生成确认转账命令(<code>Confirm</code>)。</li><li><code>onEvent(EntryFailed)</code>: 订阅转账入账失败事件（<code>EntryFailed</code>），并生成解锁金额命令(<code>UnlockAmount</code>)。</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">StatelessSaga</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TransferSaga</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Entry </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Prepared </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">prepared</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, AggregateId </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">aggregateId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Entry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(prepared.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), aggregateId.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), prepared.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Confirm </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AmountEntered </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amountEntered</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Confirm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(amountEntered.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sourceId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), amountEntered.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    UnlockAmount </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EntryFailed </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">entryFailed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UnlockAmount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(entryFailed.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sourceId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), entryFailed.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="单元测试" tabindex="-1">单元测试 <a class="header-anchor" href="#单元测试" aria-label="Permalink to &quot;单元测试&quot;">​</a></h2><blockquote><p>使用 <code>sagaVerifier</code> 进行 Saga 单元测试，可以有效的减少单元测试的编写工作量。</p></blockquote><blockquote><p><code>TransferSaga</code> 单元测试</p></blockquote><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">internal</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TransferSagaTest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onPrepared</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Prepared</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;to&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sagaVerifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransferSaga</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\`when\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expectCommandBody</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Entry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                assertThat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(it.id, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.to))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                assertThat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(it.amount, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.amount))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onAmountEntered</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AmountEntered</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sourceId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sagaVerifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransferSaga</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\`when\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expectCommandBody</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Confirm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                assertThat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(it.id, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.sourceId))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                assertThat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(it.amount, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.amount))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    fun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onEntryFailed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EntryFailed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sourceId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sagaVerifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransferSaga</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\`when\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expectCommandBody</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UnlockAmount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                assertThat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(it.id, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.sourceId))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                assertThat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(it.amount, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equalTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.amount))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,7);function m(C,B,v,f,A,S){const a=e("center");return k(),p("div",null,[g,n(a,null,{default:t(()=>[o]),_:1}),y,n(a,null,{default:t(()=>[c]),_:1}),F,n(a,null,{default:t(()=>[u]),_:1}),_])}const D=h(d,[["render",m]]);export{q as __pageData,D as default};
